<%
  const crypto = require('crypto');
  const hash = length => {
    const btoa = crypto.createHash('md5').update((+new Date() + '')).digest('hex');
    return btoa.split('').reverse().slice(0, length).join('');
  };
  const isPathObject = (typeof path === 'object')
  const props = {
    path: {
      p: isPathObject ? path.p : path,
      m: isPathObject
        ? path.m
        : /(\?|\&)(mobile)(\&|$)/.test(path)
          ? path
          : null
    }
  }
  // const newPath = {
  //   p: typeof path === 'object' ? path.p : path,
  //   m: typeof path === 'object'
  //         ? typeof path.m !== 'undefined'
  //             ? path.m
  //             : null
  //         : /(\?|\&)(mobile)(\&|$)/.test(path)
  //             ? path
  //             : null
  // };
  
  const image = {
        p : {
            path: /.*(?=\?.*$)/.test(props.path.p) ? /.*(?=\?.*$)/.exec(props.path.p) : props.path.p,
            webpPath: props.path.p ? /^.*(?=\.)/.exec(props.path.p) : null,
            webp: props.path.p ? /(\?|\&)(webp)(\&|$)/.test(props.path.p) : null
        },
        m : {
            path: props.path.m
                  ? /(\?|\&)(mobile)/.test(props.path.m)
                    ? /.*(?=\?.*$)/.exec(props.path.m).replace(/\./, '_m.')
                    : props.path.m
                  : null,
            webpPath: props.path.m
                      ? /(\?|\&)(mobile)/.test(props.path.m)
                          ? (/^.*(?=\.)/.exec(props.path.m) + '_m')
                          : /^.*(?=\.)/.exec(props.path.m)
                      : null,
            webp: props.path.m
                  ? /(?=[?&#]).*(mobile|webp)$/.test(props.path.m)
                  : false
                    
        }
    };
-%>
<figure<%- typeof style !== 'undefined' && style.main !== 'undefined' ? ` class="${ style.main }"` : '' %>>
  <% if ( image.m.path || image.p.webp || image.m.webp ) { -%>
  <picture>
    <% if ( image.m.webp ) { -%>
    <source data-srcset="<%= `${image.m.webpPath}` %>.webp?<%= hash(8) %>" type="image/webp" media="(max-width: 428px)">
    <% } -%>
    <% if ( image.m.path ) { -%>
    <source data-srcset="<%= `${image.m.path}?${hash(8)}` %>" media="(max-width: 428px)">
    <% } -%>
    <% if ( image.p.webp ) { -%>
    <source data-srcset="<%= `${image.p.webpPath}` %>.webp?<%= hash(8) %>" type="image/webp">
    <% } -%>
    <% } -%>
    <img src="<%= require('common/lazyload.png') %>" data-src="<%= `${image.p.path}?${hash(8)}` %>" class="<%- typeof style !== 'undefined' && typeof style.img !== 'undefined' ? `${style.img} ` : '' %>lazy" alt="<%- alt %> | <%- process.env.PROJECT_NAME %>" width="100%" height="100%">
    <% if ( image.m.path || image.p.webp || image.m.webp ) { -%>
  </picture>
  <% } -%>
  </figure>